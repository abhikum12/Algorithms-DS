#include <iostream>
using namespace std;
struct trie{
	public:
	trie *child[26];
	bool end;
	trie(){
		for(auto i:child)i=NULL;
		end=false;
	}
};
void insert(string str,  trie* T){
		trie* temp=T;
	
		for(int i=0;i<str.length();i++){
			if(!temp->child[str[i]-'a'])temp->child[str[i]-'a']=new trie();
			temp=temp->child[str[i]-'a'];
	}
	temp->end=true;
}
 bool search(string str,  trie *T){
		trie *temp=T;
		for(int i=0;i<str.length();i++){
			if(!temp->child[str[i]-'a'])return false;
			temp=temp->child[str[i]-'a'];
		}
		if(!temp->end)return false;
		return true;
 }
int main() {
	 trie *root= new trie();
	insert("bag",root);
	insert("bagging", root);
	cout<< search("bag", root) <<" "<< search("ba", root) ;
	return 0;
}
